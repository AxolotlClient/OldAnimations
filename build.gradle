plugins {
	id 'java'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
	id 'fabric-loom' version "1.3.+"
	id 'maven-publish'
	id 'com.modrinth.minotaur' version "2.+"
	id 'io.freefair.lombok' version "8.1.+"
	id 'org.quiltmc.gradle.licenser' version "1.+"
}

group = project.maven_group
version = project.version
archivesBaseName = "AxolotlClient-OldAnimations"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}
	maven {
		name = "legacy-fabric"
		url = "https://repo.legacyfabric.net/repository/legacyfabric/"
	}
	mavenCentral()
}

loom {
	setIntermediaryUrl('https://maven.legacyfabric.net/net/fabricmc/intermediary/%1$s/intermediary-%1$s-v2.jar')
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_18}"
	mappings "net.legacyfabric:yarn:${project.mappings_18}"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"

	modCompileOnly ("io.github.axolotlclient:AxolotlClient:${project.client}+${project.minecraft_18}") {
		transitive = false
	}
	modImplementation "io.github.axolotlclient:AxolotlClient-config:${project.config}+${project.minecraft_18}"
	include "io.github.axolotlclient:AxolotlClient-config:${project.config}+${project.minecraft_18}"
	modImplementation "io.github.axolotlclient.AxolotlClient-config:AxolotlClientConfig-common:${project.config}"

	modCompileOnlyApi(files("libs/legacy-modmenu-1.2.0+1.8.9-dev.jar"))
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

java {
	withSourcesJar()
}

license {
	rule file('HEADER')
	include '**/*.java'
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/" + repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = ""
	versionNumber = "${project.version}"
	versionType = "release"
	uploadFile = remapJar
	gameVersions.set(["${project.minecraft_18}"])
	loaders.set(["fabric", "quilt"])
	additionalFiles.set([remapSourcesJar])

	// Changelog fetching: Credit LambdAurora.
	// https://github.com/LambdAurora/LambDynamicLights/blob/1ef85f486084873b5d97b8a08df72f57859a3295/build.gradle#L145
	// License: MIT
	def changelogText = file('CHANGELOG.md').text
	def regexVersion = ((String) project.version).split("\\+")[0].replaceAll('\\.', /\\./).replaceAll('\\+', '\\+')
	def changelogRegex = ~"###? ${regexVersion}\\n\\n(( *- .+\\n)+)"
	def matcher = changelogText =~ changelogRegex

	if (matcher.find()) {
		def changelogContent = matcher.group(1)

		def changelogLines = changelogText.split('\n')
		def linkRefRegex = ~'^\\[([A-z0-9 _\\-/+.]+)]: '
		for (int i = changelogLines.length - 1; i > 0; i--) {
			def line = changelogLines[i]
			if ((line =~ linkRefRegex).find())
				changelogContent += '\n' + line
			else break
		}
		changelog = changelogContent
	} else {
		afterEvaluate {
			tasks.modrinth.setEnabled(false)
		}
	}
}
